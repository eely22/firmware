/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Fri Dec 29 18:30:13 2017. */

#ifndef PB_PARTICLE_CTRL_STORAGE_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_STORAGE_PB_H_INCLUDED
#include <pb.h>

#include "common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _particle_ctrl_StorageType {
    particle_ctrl_StorageType_INTERNAL = 0
} particle_ctrl_StorageType;
#define _particle_ctrl_StorageType_MIN particle_ctrl_StorageType_INTERNAL
#define _particle_ctrl_StorageType_MAX particle_ctrl_StorageType_INTERNAL
#define _particle_ctrl_StorageType_ARRAYSIZE ((particle_ctrl_StorageType)(particle_ctrl_StorageType_INTERNAL+1))

typedef enum _particle_ctrl_SectionType {
    particle_ctrl_SectionType_BOOTLOADER = 0,
    particle_ctrl_SectionType_SYSTEM_FIRMWARE = 1,
    particle_ctrl_SectionType_USER_FIRMWARE = 2,
    particle_ctrl_SectionType_MONO_FIRMWARE = 3,
    particle_ctrl_SectionType_OTA_BACKUP = 4,
    particle_ctrl_SectionType_FACTORY_BACKUP = 5,
    particle_ctrl_SectionType_CONFIG = 6,
    particle_ctrl_SectionType_EEPROM = 7
} particle_ctrl_SectionType;
#define _particle_ctrl_SectionType_MIN particle_ctrl_SectionType_BOOTLOADER
#define _particle_ctrl_SectionType_MAX particle_ctrl_SectionType_EEPROM
#define _particle_ctrl_SectionType_ARRAYSIZE ((particle_ctrl_SectionType)(particle_ctrl_SectionType_EEPROM+1))

typedef enum _particle_ctrl_SectionFlag {
    particle_ctrl_SectionFlag_NO_SECTION_FLAGS = 0,
    particle_ctrl_SectionFlag_READABLE = 1,
    particle_ctrl_SectionFlag_WRITABLE = 2,
    particle_ctrl_SectionFlag_CLEARABLE = 4,
    particle_ctrl_SectionFlag_NEED_CLEAR = 8
} particle_ctrl_SectionFlag;
#define _particle_ctrl_SectionFlag_MIN particle_ctrl_SectionFlag_NO_SECTION_FLAGS
#define _particle_ctrl_SectionFlag_MAX particle_ctrl_SectionFlag_NEED_CLEAR
#define _particle_ctrl_SectionFlag_ARRAYSIZE ((particle_ctrl_SectionFlag)(particle_ctrl_SectionFlag_NEED_CLEAR+1))

/* Struct definitions */
typedef struct _particle_ctrl_CancelFirmwareUpdateReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_CancelFirmwareUpdateReply) */
} particle_ctrl_CancelFirmwareUpdateReply;

typedef struct _particle_ctrl_CancelFirmwareUpdateRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_CancelFirmwareUpdateRequest) */
} particle_ctrl_CancelFirmwareUpdateRequest;

typedef struct _particle_ctrl_ClearStorageSectionReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_ClearStorageSectionReply) */
} particle_ctrl_ClearStorageSectionReply;

typedef struct _particle_ctrl_DescribeStorageReply {
    pb_callback_t storage;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply) */
} particle_ctrl_DescribeStorageReply;

typedef struct _particle_ctrl_DescribeStorageRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageRequest) */
} particle_ctrl_DescribeStorageRequest;

typedef struct _particle_ctrl_FinishFirmwareUpdateReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_FinishFirmwareUpdateReply) */
} particle_ctrl_FinishFirmwareUpdateReply;

typedef struct _particle_ctrl_LoadStorageDataReply {
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_LoadStorageDataReply) */
} particle_ctrl_LoadStorageDataReply;

typedef struct _particle_ctrl_SaveFirmwareDataReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_SaveFirmwareDataReply) */
} particle_ctrl_SaveFirmwareDataReply;

typedef struct _particle_ctrl_SaveFirmwareDataRequest {
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_SaveFirmwareDataRequest) */
} particle_ctrl_SaveFirmwareDataRequest;

typedef struct _particle_ctrl_SaveStorageDataReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_SaveStorageDataReply) */
} particle_ctrl_SaveStorageDataReply;

typedef struct _particle_ctrl_ClearStorageSectionRequest {
    uint32_t storage;
    uint32_t section;
/* @@protoc_insertion_point(struct:particle_ctrl_ClearStorageSectionRequest) */
} particle_ctrl_ClearStorageSectionRequest;

typedef struct _particle_ctrl_DescribeStorageReply_Section {
    particle_ctrl_SectionType type;
    uint32_t index;
    uint32_t size;
    uint32_t flags;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply_Section) */
} particle_ctrl_DescribeStorageReply_Section;

typedef struct _particle_ctrl_DescribeStorageReply_Storage {
    particle_ctrl_StorageType type;
    uint32_t index;
    uint32_t flags;
    pb_callback_t sections;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply_Storage) */
} particle_ctrl_DescribeStorageReply_Storage;

typedef struct _particle_ctrl_FinishFirmwareUpdateRequest {
    bool validate_only;
/* @@protoc_insertion_point(struct:particle_ctrl_FinishFirmwareUpdateRequest) */
} particle_ctrl_FinishFirmwareUpdateRequest;

typedef struct _particle_ctrl_LoadStorageDataRequest {
    uint32_t storage;
    uint32_t section;
    uint32_t offset;
    uint32_t size;
/* @@protoc_insertion_point(struct:particle_ctrl_LoadStorageDataRequest) */
} particle_ctrl_LoadStorageDataRequest;

typedef struct _particle_ctrl_SaveStorageDataRequest {
    uint32_t storage;
    uint32_t section;
    uint32_t offset;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_SaveStorageDataRequest) */
} particle_ctrl_SaveStorageDataRequest;

typedef struct _particle_ctrl_StartFirmwareUpdateReply {
    uint32_t chunk_size;
/* @@protoc_insertion_point(struct:particle_ctrl_StartFirmwareUpdateReply) */
} particle_ctrl_StartFirmwareUpdateReply;

typedef struct _particle_ctrl_StartFirmwareUpdateRequest {
    uint32_t size;
/* @@protoc_insertion_point(struct:particle_ctrl_StartFirmwareUpdateRequest) */
} particle_ctrl_StartFirmwareUpdateRequest;

/* Default values for struct fields */

/* Initializer values for message structs */
#define particle_ctrl_StartFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_StartFirmwareUpdateReply_init_default {0}
#define particle_ctrl_FinishFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_FinishFirmwareUpdateReply_init_default {0}
#define particle_ctrl_CancelFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_CancelFirmwareUpdateReply_init_default {0}
#define particle_ctrl_SaveFirmwareDataRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_SaveFirmwareDataReply_init_default {0}
#define particle_ctrl_DescribeStorageRequest_init_default {0}
#define particle_ctrl_DescribeStorageReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_DescribeStorageReply_Section_init_default {(particle_ctrl_SectionType)0, 0, 0, 0}
#define particle_ctrl_DescribeStorageReply_Storage_init_default {(particle_ctrl_StorageType)0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_LoadStorageDataRequest_init_default {0, 0, 0, 0}
#define particle_ctrl_LoadStorageDataReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_SaveStorageDataRequest_init_default {0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_SaveStorageDataReply_init_default {0}
#define particle_ctrl_ClearStorageSectionRequest_init_default {0, 0}
#define particle_ctrl_ClearStorageSectionReply_init_default {0}
#define particle_ctrl_StartFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_StartFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_FinishFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_FinishFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_CancelFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_CancelFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_SaveFirmwareDataRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_SaveFirmwareDataReply_init_zero {0}
#define particle_ctrl_DescribeStorageRequest_init_zero {0}
#define particle_ctrl_DescribeStorageReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_DescribeStorageReply_Section_init_zero {(particle_ctrl_SectionType)0, 0, 0, 0}
#define particle_ctrl_DescribeStorageReply_Storage_init_zero {(particle_ctrl_StorageType)0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_LoadStorageDataRequest_init_zero {0, 0, 0, 0}
#define particle_ctrl_LoadStorageDataReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_SaveStorageDataRequest_init_zero {0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_SaveStorageDataReply_init_zero {0}
#define particle_ctrl_ClearStorageSectionRequest_init_zero {0, 0}
#define particle_ctrl_ClearStorageSectionReply_init_zero {0}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_DescribeStorageReply_storage_tag 1
#define particle_ctrl_LoadStorageDataReply_data_tag 1
#define particle_ctrl_SaveFirmwareDataRequest_data_tag 1
#define particle_ctrl_ClearStorageSectionRequest_storage_tag 1
#define particle_ctrl_ClearStorageSectionRequest_section_tag 2
#define particle_ctrl_DescribeStorageReply_Section_type_tag 1
#define particle_ctrl_DescribeStorageReply_Section_index_tag 2
#define particle_ctrl_DescribeStorageReply_Section_size_tag 3
#define particle_ctrl_DescribeStorageReply_Section_flags_tag 4
#define particle_ctrl_DescribeStorageReply_Storage_type_tag 1
#define particle_ctrl_DescribeStorageReply_Storage_index_tag 2
#define particle_ctrl_DescribeStorageReply_Storage_flags_tag 3
#define particle_ctrl_DescribeStorageReply_Storage_sections_tag 4
#define particle_ctrl_FinishFirmwareUpdateRequest_validate_only_tag 1
#define particle_ctrl_LoadStorageDataRequest_storage_tag 1
#define particle_ctrl_LoadStorageDataRequest_section_tag 2
#define particle_ctrl_LoadStorageDataRequest_offset_tag 3
#define particle_ctrl_LoadStorageDataRequest_size_tag 4
#define particle_ctrl_SaveStorageDataRequest_storage_tag 1
#define particle_ctrl_SaveStorageDataRequest_section_tag 2
#define particle_ctrl_SaveStorageDataRequest_offset_tag 3
#define particle_ctrl_SaveStorageDataRequest_data_tag 4
#define particle_ctrl_StartFirmwareUpdateReply_chunk_size_tag 1
#define particle_ctrl_StartFirmwareUpdateRequest_size_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t particle_ctrl_StartFirmwareUpdateRequest_fields[2];
extern const pb_field_t particle_ctrl_StartFirmwareUpdateReply_fields[2];
extern const pb_field_t particle_ctrl_FinishFirmwareUpdateRequest_fields[2];
extern const pb_field_t particle_ctrl_FinishFirmwareUpdateReply_fields[1];
extern const pb_field_t particle_ctrl_CancelFirmwareUpdateRequest_fields[1];
extern const pb_field_t particle_ctrl_CancelFirmwareUpdateReply_fields[1];
extern const pb_field_t particle_ctrl_SaveFirmwareDataRequest_fields[2];
extern const pb_field_t particle_ctrl_SaveFirmwareDataReply_fields[1];
extern const pb_field_t particle_ctrl_DescribeStorageRequest_fields[1];
extern const pb_field_t particle_ctrl_DescribeStorageReply_fields[2];
extern const pb_field_t particle_ctrl_DescribeStorageReply_Section_fields[5];
extern const pb_field_t particle_ctrl_DescribeStorageReply_Storage_fields[5];
extern const pb_field_t particle_ctrl_LoadStorageDataRequest_fields[5];
extern const pb_field_t particle_ctrl_LoadStorageDataReply_fields[2];
extern const pb_field_t particle_ctrl_SaveStorageDataRequest_fields[5];
extern const pb_field_t particle_ctrl_SaveStorageDataReply_fields[1];
extern const pb_field_t particle_ctrl_ClearStorageSectionRequest_fields[3];
extern const pb_field_t particle_ctrl_ClearStorageSectionReply_fields[1];

/* Maximum encoded size of messages (where known) */
#define particle_ctrl_StartFirmwareUpdateRequest_size 6
#define particle_ctrl_StartFirmwareUpdateReply_size 6
#define particle_ctrl_FinishFirmwareUpdateRequest_size 2
#define particle_ctrl_FinishFirmwareUpdateReply_size 0
#define particle_ctrl_CancelFirmwareUpdateRequest_size 0
#define particle_ctrl_CancelFirmwareUpdateReply_size 0
/* particle_ctrl_SaveFirmwareDataRequest_size depends on runtime parameters */
#define particle_ctrl_SaveFirmwareDataReply_size 0
#define particle_ctrl_DescribeStorageRequest_size 0
/* particle_ctrl_DescribeStorageReply_size depends on runtime parameters */
#define particle_ctrl_DescribeStorageReply_Section_size 20
/* particle_ctrl_DescribeStorageReply_Storage_size depends on runtime parameters */
#define particle_ctrl_LoadStorageDataRequest_size 24
/* particle_ctrl_LoadStorageDataReply_size depends on runtime parameters */
/* particle_ctrl_SaveStorageDataRequest_size depends on runtime parameters */
#define particle_ctrl_SaveStorageDataReply_size  0
#define particle_ctrl_ClearStorageSectionRequest_size 12
#define particle_ctrl_ClearStorageSectionReply_size 0

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define STORAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
